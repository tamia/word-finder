#!/usr/bin/env ruby

LETTERS_1 = ("a".."z").to_a
LETTERS_SYMBOLS = (0.chr..255.chr).to_a.grep(/[[:print:]]/) - LETTERS_1 - LETTERS_1.map(&:upcase) - [' ', '\\', "'"]

def secret_code(encoding, direction, text)
  case encoding

  when "1-letter"
    case direction
    when "encode"
      # you think forward 1 letter for each letter
      text.split('').map { |c| LETTERS_1[LETTERS_1.index(c) + 1] }.join
    when "decode"
      # you think backward 1 letter for each letter
      text.split('').map { |c| LETTERS_1[LETTERS_1.index(c) - 1] }.join
    else
      raise "we dont support '#{direction}', but we support 'encode' and 'decode'"
    end

  when "symbol"
    case direction
    when "encode"
      # you think backward 26 letter for each letter
      text.split('').map { |c| c == ' ' ? c : LETTERS_SYMBOLS[LETTERS_1.index(c)] }.join
    when "decode"
      # you think forward 26 letter for each letter
      text.split('').map { |c| c == ' ' ? c : LETTERS_1[LETTERS_SYMBOLS.index(c)] }.join
    else
      raise "we dont support '#{direction}', but we support 'encode' and 'decode'"
    end

  else
    raise "unsupported encoding '#{encoding}', we support only '1-letter' and 'symbol'"
  end
end

puts secret_code(*ARGV) unless $0.include?("_test.rb")
